/*
programa declaracao_lista
declaracao_lista declaracao_lista declaracao | declaracao
declaracao var_declaracao | fun_declaracao
var_declaracao tipo_especificador ID; | tipo_especificador ID[NUM]
tipo_especificador int | void
fun_declaracao tipo_especificador ID(params) composto_decl
params params_lista | void
params_lista params_lista, param | param
param tipo_especificador ID | tipo_especificador ID[]
composto_decl {local_declaracoes statement_lista}
local_declaracoes local_declaracoes var_declaracao | vazio
statement_lista local_declaracoes var_declaracao | vazio
statement expressao_decl | composto_decl | selecao_decl | iteracao_decl | retorno_decl
expressao_decl expressao; | ;
selecao_decl if(expressao) statement | if(expressao) statement else statement
iteracao_decl while(expressao) statement
retorno_decl return; | return expressao;
expressao var = expressao | expressao_simples
var ID | ID[expressao]
simples_expressao ID | ID[expressao]
relacional <=|<|>|>=|==|!=
soma_expressao soma_expressao relacional soma_expressao | soma_expressao
soma + | -
termo termo mult fator | fator
mult * | /
fator (expressao) | var | ativacao | NUM
ativacao ID(args)
args args_lista | vazio
args_lista
*/